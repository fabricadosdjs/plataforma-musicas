const { Client } = require('pg');

async function setupDatabaseWithSQL() {
    let client;

    try {
        console.log('üöÄ Iniciando configura√ß√£o do banco com SQL direto...');

        // Conectar ao banco usando as vari√°veis de ambiente
        client = new Client({
            connectionString: process.env.DATABASE_URL,
            ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
        });

        await client.connect();
        console.log('‚úÖ Conex√£o com banco estabelecida');

        // 1. Verificar se a tabela Release existe
        const tableExists = await client.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = 'Release'
      );
    `);

        if (!tableExists.rows[0].exists) {
            console.log('üìù Criando tabela Release...');

            await client.query(`
        CREATE TABLE "Release" (
          "id" SERIAL PRIMARY KEY,
          "title" VARCHAR(255) NOT NULL,
          "artist" VARCHAR(255) NOT NULL,
          "albumArt" TEXT NOT NULL,
          "description" TEXT,
          "genre" VARCHAR(100) NOT NULL,
          "releaseDate" TIMESTAMP NOT NULL,
          "trackCount" INTEGER DEFAULT 0,
          "duration" VARCHAR(50),
          "label" VARCHAR(255),
          "producer" VARCHAR(255),
          "featured" BOOLEAN DEFAULT false,
          "exclusive" BOOLEAN DEFAULT false,
          "streaming" JSONB,
          "social" JSONB,
          "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
          "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
      `);

            console.log('‚úÖ Tabela Release criada');
        } else {
            console.log('‚ö†Ô∏è Tabela Release j√° existe');
        }

        // 2. Verificar se a coluna releaseId existe na tabela Track
        const columnExists = await client.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.columns 
        WHERE table_name = 'Track' 
        AND column_name = 'releaseId'
      );
    `);

        if (!columnExists.rows[0].exists) {
            console.log('üîó Adicionando coluna releaseId na tabela Track...');

            await client.query(`
        ALTER TABLE "Track" ADD COLUMN "releaseId" INTEGER;
      `);

            console.log('‚úÖ Coluna releaseId adicionada');
        } else {
            console.log('‚ö†Ô∏è Coluna releaseId j√° existe');
        }

        // 3. Criar √≠ndices para melhorar performance
        console.log('üìä Criando √≠ndices...');

        try {
            await client.query(`
        CREATE INDEX IF NOT EXISTS "idx_release_artist" ON "Release"("artist");
      `);

            await client.query(`
        CREATE INDEX IF NOT EXISTS "idx_release_genre" ON "Release"("genre");
      `);

            await client.query(`
        CREATE INDEX IF NOT EXISTS "idx_release_date" ON "Release"("releaseDate");
      `);

            await client.query(`
        CREATE INDEX IF NOT EXISTS "idx_track_release" ON "Track"("releaseId");
      `);

            console.log('‚úÖ √çndices criados');
        } catch (error) {
            console.log('‚ö†Ô∏è Erro ao criar √≠ndices:', error.message);
        }

        // 4. Inserir dados de exemplo (apenas se n√£o existirem)
        console.log('üìù Inserindo releases de exemplo...');

        const releases = [
            {
                title: 'Summer Vibes 2024',
                artist: 'DJ J√©ssika Luana',
                albumArt: 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400&h=400&fit=crop',
                description: 'Colet√¢nea de m√∫sicas eletr√¥nicas para o ver√£o, com batidas contagiantes e melodias energ√©ticas.',
                genre: 'Electronic',
                releaseDate: '2024-01-15',
                trackCount: 12,
                duration: '1:15:30',
                label: 'Plataforma M√∫sicas',
                producer: 'DJ J√©ssika Luana',
                featured: true,
                exclusive: false,
                streaming: JSON.stringify({
                    spotify: 'https://open.spotify.com/album/example',
                    deezer: 'https://deezer.com/album/example'
                }),
                social: JSON.stringify({
                    instagram: '@djessikaluana',
                    facebook: 'DJ J√©ssika Luana'
                })
            },
            {
                title: 'Deep House Collection',
                artist: 'Various Artists',
                albumArt: 'https://images.unsplash.com/photo-1511379938545-c1e474798dcd?w=400&h=400&fit=crop',
                description: 'Sele√ß√£o das melhores m√∫sicas deep house da plataforma, perfeita para momentos de relaxamento.',
                genre: 'Deep House',
                releaseDate: '2024-01-10',
                trackCount: 8,
                duration: '58:45',
                label: 'Plataforma M√∫sicas',
                producer: 'Various',
                featured: false,
                exclusive: true,
                streaming: JSON.stringify({
                    spotify: 'https://open.spotify.com/album/example2',
                    apple: 'https://music.apple.com/album/example2'
                }),
                social: JSON.stringify({
                    website: 'https://plataforma-musicas.com'
                })
            },
            {
                title: 'Progressive House Hits',
                artist: 'DJ Carlos Silva',
                albumArt: 'https://images.unsplash.com/photo-1516280440614-37939bbacd81?w=400&h=400&fit=crop',
                description: 'Os maiores sucessos de progressive house, com batidas progressivas e melodias cativantes.',
                genre: 'Progressive House',
                releaseDate: '2024-01-05',
                trackCount: 15,
                duration: '1:45:20',
                label: 'Plataforma M√∫sicas',
                producer: 'DJ Carlos Silva',
                featured: true,
                exclusive: false,
                streaming: JSON.stringify({
                    spotify: 'https://open.spotify.com/album/example3',
                    deezer: 'https://deezer.com/album/example3'
                }),
                social: JSON.stringify({
                    instagram: '@djcarlossilva',
                    youtube: 'DJ Carlos Silva'
                })
            },
            {
                title: 'Techno Underground',
                artist: 'Various Artists',
                albumArt: 'https://images.unsplash.com/photo-1511379938545-c1e474798dcd?w=400&h=400&fit=crop',
                description: 'Colet√¢nea underground de techno, com artistas emergentes e sons experimentais.',
                genre: 'Techno',
                releaseDate: '2024-01-01',
                trackCount: 10,
                duration: '1:20:15',
                label: 'Plataforma M√∫sicas',
                producer: 'Various',
                featured: false,
                exclusive: false,
                streaming: JSON.stringify({
                    spotify: 'https://open.spotify.com/album/example4'
                }),
                social: JSON.stringify({
                    discord: 'https://discord.gg/techno'
                })
            },
            {
                title: 'Trance Classics',
                artist: 'DJ Maria Santos',
                albumArt: 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400&h=400&fit=crop',
                description: 'Cl√°ssicos do trance que marcaram √©poca, com melodias √©picas e batidas energ√©ticas.',
                genre: 'Trance',
                releaseDate: '2023-12-20',
                trackCount: 20,
                duration: '2:15:45',
                label: 'Plataforma M√∫sicas',
                producer: 'DJ Maria Santos',
                featured: true,
                exclusive: true,
                streaming: JSON.stringify({
                    spotify: 'https://open.spotify.com/album/example5',
                    deezer: 'https://deezer.com/album/example5',
                    apple: 'https://music.apple.com/album/example5'
                }),
                social: JSON.stringify({
                    instagram: '@djmaria',
                    facebook: 'DJ Maria Santos',
                    youtube: 'DJ Maria Santos'
                })
            }
        ];

        for (const release of releases) {
            try {
                // Verificar se j√° existe
                const existing = await client.query(`
          SELECT id FROM "Release" WHERE title = $1 AND artist = $2
        `, [release.title, release.artist]);

                if (existing.rows.length === 0) {
                    await client.query(`
            INSERT INTO "Release" (
              title, artist, "albumArt", description, genre, "releaseDate", 
              "trackCount", duration, label, producer, featured, exclusive, 
              streaming, social
            ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)
          `, [
                        release.title, release.artist, release.albumArt, release.description,
                        release.genre, release.releaseDate, release.trackCount, release.duration,
                        release.label, release.producer, release.featured, release.exclusive,
                        release.streaming, release.social
                    ]);

                    console.log(`‚úÖ Release criado: ${release.title}`);
                } else {
                    console.log(`‚ö†Ô∏è Release j√° existe: ${release.title}`);
                }
            } catch (error) {
                console.error(`‚ùå Erro ao criar release ${release.title}:`, error.message);
            }
        }

        // 5. Conectar algumas m√∫sicas existentes aos releases
        console.log('üîó Conectando m√∫sicas aos releases...');

        try {
            // Buscar releases criados
            const createdReleases = await client.query(`
        SELECT id, title FROM "Release" ORDER BY id
      `);

            if (createdReleases.rows.length > 0) {
                // Atualizar m√∫sicas de DJ J√©ssika
                const jessikaResult = await client.query(`
          UPDATE "Track" 
          SET "releaseId" = $1 
          WHERE (artist ILIKE '%J√©ssika%' OR artist ILIKE '%Jessika%')
          AND "releaseId" IS NULL
          LIMIT 5
          RETURNING id
        `, [createdReleases.rows[0].id]);

                if (jessikaResult.rows.length > 0) {
                    console.log(`‚úÖ ${jessikaResult.rows.length} m√∫sicas conectadas ao release "${createdReleases.rows[0].title}"`);
                }

                // Atualizar m√∫sicas Deep House
                const deepHouseResult = await client.query(`
          UPDATE "Track" 
          SET "releaseId" = $1 
          WHERE (style ILIKE '%Deep House%' OR style ILIKE '%deep house%')
          AND "releaseId" IS NULL
          LIMIT 3
          RETURNING id
        `, [createdReleases.rows[1].id]);

                if (deepHouseResult.rows.length > 0) {
                    console.log(`‚úÖ ${deepHouseResult.rows.length} m√∫sicas conectadas ao release "${createdReleases.rows[1].title}"`);
                }

                // Atualizar m√∫sicas Progressive House
                const progressiveResult = await client.query(`
          UPDATE "Track" 
          SET "releaseId" = $1 
          WHERE (style ILIKE '%Progressive%' OR style ILIKE '%progressive%')
          AND "releaseId" IS NULL
          LIMIT 4
          RETURNING id
        `, [createdReleases.rows[2].id]);

                if (progressiveResult.rows.length > 0) {
                    console.log(`‚úÖ ${progressiveResult.rows.length} m√∫sicas conectadas ao release "${createdReleases.rows[2].title}"`);
                }
            }
        } catch (error) {
            console.log('‚ö†Ô∏è N√£o foi poss√≠vel conectar m√∫sicas aos releases:', error.message);
        }

        // 6. Atualizar contadores de tracks
        console.log('üìä Atualizando contadores de tracks...');

        try {
            await client.query(`
        UPDATE "Release" 
        SET "trackCount" = (
          SELECT COUNT(*) 
          FROM "Track" 
          WHERE "Track"."releaseId" = "Release"."id"
        )
      `);

            console.log('‚úÖ Contadores de tracks atualizados');
        } catch (error) {
            console.log('‚ö†Ô∏è N√£o foi poss√≠vel atualizar contadores:', error.message);
        }

        // 7. Verificar resultado final
        console.log('\nüìã Resumo da configura√ß√£o:');

        const totalReleases = await client.query(`
      SELECT COUNT(*) as total FROM "Release"
    `);

        const totalTracksWithRelease = await client.query(`
      SELECT COUNT(*) as total FROM "Track" WHERE "releaseId" IS NOT NULL
    `);

        console.log(`üéµ Total de releases: ${totalReleases.rows[0].total}`);
        console.log(`üîó Tracks conectadas a releases: ${totalTracksWithRelease.rows[0].total}`);

        console.log('\nüéâ Configura√ß√£o do banco conclu√≠da com sucesso!');
        console.log('üí° Agora voc√™ pode usar a API de releases com dados reais do banco.');

    } catch (error) {
        console.error('‚ùå Erro durante a configura√ß√£o:', error);

        if (error.code === 'ECONNREFUSED') {
            console.log('üí° Dica: Verifique se o banco est√° rodando e acess√≠vel');
        } else if (error.code === '28P01') {
            console.log('üí° Dica: Verifique as credenciais do banco no arquivo .env');
        } else if (error.code === '42P07') {
            console.log('üí° Dica: Alguns objetos j√° existem no banco');
        }
    } finally {
        if (client) {
            await client.end();
            console.log('üîå Conex√£o com banco fechada');
        }
    }
}

// Executar se chamado diretamente
if (require.main === module) {
    setupDatabaseWithSQL();
}

module.exports = { setupDatabaseWithSQL };
