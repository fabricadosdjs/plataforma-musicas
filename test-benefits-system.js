// Script para testar o sistema de benef√≠cios personalizados
const testCustomBenefits = async () => {
    const baseUrl = 'http://localhost:3000';

    // Primeiro, vamos criar um usu√°rio de teste se ainda n√£o existe
    const testUserId = 'cme2vqe260000tyuwu9f1apeq'; // ID do usu√°rio que criamos antes

    // Dados de benef√≠cios personalizados para testar
    const customBenefits = {
        // Personalizar limites de pack requests
        packRequests: {
            enabled: true,
            limit: 8, // Aumentar para 8 por semana
            used: 2   // J√° usou 2
        },

        // Personalizar playlist downloads
        playlistDownloads: {
            enabled: true,
            limit: 12, // Aumentar para 12 por semana
            used: 1    // J√° usou 1
        },

        // Habilitar Deemix e Deezer Premium personalizadamente
        deemix: true,
        deezerPremium: true,

        // Acesso ao Drive personalizado
        driveAccess: {
            enabled: true,
            description: 'Acesso VIP Personalizado - Premium'
        }
    };

    try {
        console.log('üß™ Testando sistema de benef√≠cios personalizados...');
        console.log('üë§ User ID:', testUserId);
        console.log('‚öôÔ∏è Benef√≠cios personalizados:', JSON.stringify(customBenefits, null, 2));

        const response = await fetch(`${baseUrl}/api/admin/update-custom-benefits`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                userId: testUserId,
                customBenefits: customBenefits
            })
        });

        const result = await response.json();

        if (response.ok) {
            console.log('‚úÖ Benef√≠cios personalizados salvos com sucesso!');
            console.log('üìã Resposta:', JSON.stringify(result, null, 2));

            // Agora vamos testar se os benef√≠cios aparecem no profile
            console.log('\nüîç Testando se os benef√≠cios aparecem no perfil...');

            // Nota: Esta chamada falhar√° porque precisa de autentica√ß√£o, 
            // mas pelo menos podemos ver se o endpoint responde
            const profileResponse = await fetch(`${baseUrl}/api/profile`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (profileResponse.status === 401) {
                console.log('üîí Profile API requer autentica√ß√£o (esperado)');
                console.log('‚úÖ Sistema est√° funcionando! Benef√≠cios personalizados foram salvos.');
                console.log('üìù Para ver os benef√≠cios no perfil, fa√ßa login e acesse /profile/beneficios');
            } else {
                const profileData = await profileResponse.json();
                console.log('üìä Dados do perfil:', profileData);
            }

        } else {
            console.log('‚ùå Erro ao salvar benef√≠cios:', response.status, result);
        }

    } catch (error) {
        console.error('üí• Erro na requisi√ß√£o:', error);
    }
};

// Executar o teste
testCustomBenefits();
