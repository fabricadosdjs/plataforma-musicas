                {/* Modal de Edição/Adição */}
                {(editingUser || showAddModal) && (
                    <div className="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4">
                        <div className="bg-gradient-to-br from-gray-800 to-gray-900 rounded-2xl p-8 w-full max-w-3xl max-h-[90vh] overflow-y-auto shadow-2xl border border-gray-700">
                            {/* Header do Modal */}
                            <div className="flex items-center justify-between mb-8">
                                <div className="flex items-center gap-4">
                                    <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center">
                                        {editingUser ? <Edit className="w-6 h-6 text-white" /> : <UserPlus className="w-6 h-6 text-white" />}
                                    </div>
                                    <div>
                                        <h3 className="text-2xl font-bold text-white">
                                            {editingUser ? 'Editar Usuário' : 'Adicionar Novo Usuário'}
                                        </h3>
                                        <p className="text-gray-400 text-sm mt-1">
                                            {editingUser ? 'Modifique as informações do usuário' : 'Preencha os dados para criar uma nova conta'}
                                        </p>
                                    </div>
                                </div>
                                <button
                                    onClick={closeEditModal}
                                    className="text-gray-400 hover:text-white transition-colors p-2 hover:bg-gray-700 rounded-lg"
                                >
                                    <X className="w-6 h-6" />
                                </button>
                            </div>

                            {/* Formulário */}
                            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                {/* Nome */}
                                <div>
                                    <label className="block text-sm font-medium text-gray-300 mb-2">
                                        Nome Completo
                                    </label>
                                    <input
                                        type="text"
                                        value={editForm.name}
                                        onChange={(e) => setEditForm(prev => ({ ...prev, name: e.target.value }))}
                                        className="w-full px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
                                        placeholder="Digite o nome completo"
                                    />
                                </div>

                                {/* Email */}
                                <div>
                                    <label className="block text-sm font-medium text-gray-300 mb-2">
                                        E-mail
                                    </label>
                                    <input
                                        type="email"
                                        value={editForm.email}
                                        onChange={(e) => setEditForm(prev => ({ ...prev, email: e.target.value }))}
                                        className="w-full px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
                                        placeholder="Digite o e-mail"
                                    />
                                </div>

                                {/* Toggles VIP e Deemix */}
                                <div className="md:col-span-2">
                                    <div className="bg-gray-700/30 rounded-xl p-6 border border-gray-600">
                                        <h4 className="text-lg font-semibold text-white mb-4 flex items-center gap-2">
                                            <Crown className="w-5 h-5 text-yellow-400" />
                                            Configurações Especiais
                                        </h4>
                                        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                            {/* Toggle Usuário VIP */}
                                            <div className="flex items-center justify-between">
                                                <div className="flex items-center gap-3">
                                                    <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-500 rounded-lg flex items-center justify-center">
                                                        <Crown className="w-5 h-5 text-white" />
                                                    </div>
                                                    <div>
                                                        <label className="text-sm font-semibold text-white">Usuário VIP</label>
                                                        <p className="text-xs text-gray-400">Acesso aos benefícios premium</p>
                                                    </div>
                                                </div>
                                                <button
                                                    type="button"
                                                    onClick={() => setEditForm(prev => ({ ...prev, is_vip: !prev.is_vip }))}
                                                    className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 ${editForm.is_vip ? 'bg-blue-600' : 'bg-gray-600'}`}
                                                >
                                                    <span
                                                        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${editForm.is_vip ? 'translate-x-6' : 'translate-x-1'}`}
                                                    />
                                                </button>
                                            </div>

                                            {/* Toggle Deemix Ativo */}
                                            <div className="flex items-center justify-between">
                                                <div className="flex items-center gap-3">
                                                    <div className="w-10 h-10 bg-gradient-to-br from-green-500 to-emerald-500 rounded-lg flex items-center justify-center">
                                                        <DollarSign className="w-5 h-5 text-white" />
                                                    </div>
                                                    <div>
                                                        <label className="text-sm font-semibold text-white">Deemix Ativo</label>
                                                        <p className="text-xs text-gray-400">Acesso ao sistema Deemix</p>
                                                    </div>
                                                </div>
                                                <button
                                                    type="button"
                                                    onClick={() => setEditForm(prev => ({ ...prev, deemix: !prev.deemix }))}
                                                    className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 ${editForm.deemix ? 'bg-green-600' : 'bg-gray-600'}`}
                                                >
                                                    <span
                                                        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${editForm.deemix ? 'translate-x-6' : 'translate-x-1'}`}
                                                    />
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                {/* Senha */}
                                <div className="md:col-span-2">
                                    <label className="block text-sm font-medium text-gray-300 mb-2">
                                        Senha {editingUser && '(deixe em branco para manter atual)'}
                                    </label>
                                    <div className="relative">
                                        <input
                                            type={showPassword ? "text" : "password"}
                                            value={editForm.password}
                                            onChange={(e) => setEditForm(prev => ({ ...prev, password: e.target.value }))}
                                            className="w-full px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all pr-20"
                                            placeholder={editingUser ? "Nova senha (opcional)" : "Senha do usuário"}
                                        />
                                        <div className="absolute right-3 top-1/2 -translate-y-1/2 flex gap-2">
                                            <button
                                                type="button"
                                                onClick={() => setShowPassword(!showPassword)}
                                                className="p-1 text-gray-400 hover:text-white transition-colors"
                                                title={showPassword ? "Ocultar senha" : "Mostrar senha"}
                                            >
                                                {showPassword ? <EyeOff className="w-4 h-4" /> : <Eye className="w-4 h-4" />}
                                            </button>
                                            <button
                                                type="button"
                                                onClick={generatePassword}
                                                className="p-1 text-gray-400 hover:text-green-400 transition-colors"
                                                title="Gerar senha"
                                            >
                                                <RefreshCw className="w-4 h-4" />
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            {/* Botões do Modal */}
                            <div className="flex gap-4 mt-8 pt-6 border-t border-gray-700">
                                <button
                                    onClick={closeEditModal}
                                    className="flex-1 px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white rounded-xl transition-all font-medium flex items-center justify-center gap-2"
                                >
                                    <X className="w-4 h-4" />
                                    Cancelar
                                </button>
                                <button
                                    onClick={editingUser ? saveUserEdit : addNewUser}
                                    disabled={updating !== null}
                                    className="flex-1 px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-xl transition-all font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2"
                                >
                                    {updating !== null ? (
                                        <>
                                            <Loader2 className="w-4 h-4 animate-spin" />
                                            Salvando...
                                        </>
                                    ) : (
                                        <>
                                            {editingUser ? <Edit className="w-4 h-4" /> : <UserPlus className="w-4 h-4" />}
                                            {editingUser ? 'Salvar Alterações' : 'Adicionar Usuário'}
                                        </>
                                    )}
                                </button>
                            </div>
                        </div>
                    </div>
                )}
