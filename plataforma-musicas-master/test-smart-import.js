// Script para testar a importa√ß√£o inteligente
import dotenv from 'dotenv';

// Carregar vari√°veis de ambiente
dotenv.config({ path: '.env.local' });

async function testSmartImport() {
    console.log('üß† Testando Importa√ß√£o Inteligente...\n');

    try {
        // Teste 1: Detectar novos arquivos
        console.log('üîç Teste 1: Detectando novos arquivos...');
        const detectResponse = await fetch('http://localhost:3000/api/contabo/detect-new');
        const detectResult = await detectResponse.json();

        console.log(`‚úÖ Detec√ß√£o conclu√≠da!`);
        console.log(`   üìÅ Total no storage: ${detectResult.totalFiles}`);
        console.log(`   ‚úÖ J√° no banco: ${detectResult.existingFiles}`);
        console.log(`   ‚≠ê Novos arquivos: ${detectResult.newFiles}`);

        if (detectResult.newTracks.length > 0) {
            console.log('\nüìã Preview dos novos arquivos:');
            detectResult.newTracks.slice(0, 3).forEach((track, index) => {
                console.log(`   ${index + 1}. ${track.preview.artist} - ${track.preview.title}`);
                console.log(`      Vers√£o: ${track.preview.version}`);
                console.log(`      Arquivo: ${track.filename}`);
            });
        }

        // Teste 2: Importa√ß√£o inteligente (apenas se h√° novos arquivos)
        if (detectResult.newFiles > 0) {
            console.log('\nüß† Teste 2: Executando importa√ß√£o inteligente...');

            const importResponse = await fetch('http://localhost:3000/api/contabo/smart-import', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            const importResult = await importResponse.json();

            if (importResult.success) {
                console.log(`‚úÖ Importa√ß√£o bem-sucedida!`);
                console.log(`   üéµ M√∫sicas importadas: ${importResult.imported}`);
                console.log(`   üìä Total no banco: ${importResult.statistics.totalInDatabase}`);

                if (importResult.statistics.byStyle.length > 0) {
                    console.log('\nüé≠ Estilos detectados:');
                    importResult.statistics.byStyle.forEach(style => {
                        console.log(`   ${style.style}: ${style._count} m√∫sicas`);
                    });
                }

                if (importResult.newTracks.length > 0) {
                    console.log('\nüé∂ M√∫sicas importadas:');
                    importResult.newTracks.slice(0, 5).forEach((track, index) => {
                        console.log(`   ${index + 1}. ${track.artist} - ${track.songName} (${track.style})`);
                    });
                }
            } else {
                console.log(`‚ùå Erro na importa√ß√£o: ${importResult.message}`);
            }
        } else {
            console.log('\n ‚ÑπÔ∏è Nenhum arquivo novo para importar');
        }

        console.log('\nüéâ TESTE DA IMPORTA√á√ÉO INTELIGENTE CONCLU√çDO!');
        console.log('üí° Acesse http://localhost:3000/admin/contabo-smart para ver a interface visual');

    } catch (error) {
        console.error('\n‚ùå ERRO NO TESTE:', error.message);
        console.log('\nüîß Verifique:');
        console.log('   1. Se o servidor est√° rodando na porta 3000');
        console.log('   2. Se as APIs foram criadas corretamente');
        console.log('   3. Se o Contabo est√° conectado');
    }
}

testSmartImport();
