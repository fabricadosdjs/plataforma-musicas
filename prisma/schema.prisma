// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Novo modelo para armazenar Likes
model Like {
  id        Int      @id @default(autoincrement())
  trackId   Int
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, trackId])
}

// Novo modelo para armazenar Downloads
model Download {
  id        Int      @id @default(autoincrement())
  trackId   Int
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, trackId])
}

model User {
  id                    String    @id @unique
  email                 String?   @unique
  name                  String?
  // Relações com os novos modelos
  likes                 Like[]
  downloads             Download[]

  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  // Campos para integração com Stripe (Adicionados aqui)
  stripeCustomerId      String?   @unique // ID do cliente Stripe
  stripeSubscriptionId  String?   @unique // ID da assinatura Stripe
  stripePriceId         String?   // ID do preço do produto Stripe (plano)
  stripeCurrentPeriodEnd DateTime? // Fim do período atual da assinatura
  subscriptionStatus    String?   // Status da assinatura (e.g., 'active', 'canceled', 'trialing')
}

model Track {
  id          Int      @id @default(autoincrement())
  songName    String
  artist      String
  style       String
  version     String
  imageUrl    String
  previewUrl  String
  downloadUrl String
  releaseDate DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
